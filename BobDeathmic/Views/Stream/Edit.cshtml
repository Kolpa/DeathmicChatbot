@model BobDeathmic.ViewModels.StreamModels.StreamEditViewDataModel

@{
    ViewData["Title"] = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link rel="stylesheet" href="~/css/forms.css" />
<link rel="stylesheet" href="~/css/Buttons.css" />

<div class="breadcrumbs">
    <span>Streams > Verwaltung > Editieren</span>
</div>
@Html.PartialAsync("_StatusMessage", Model.StatusMessage).Result
<div class="pa-35">
    <h2>Editieren</h2>

    <h4>Stream</h4>
    <hr />
    <div class="row">
        <div class="col-md-4">
            <form asp-action="Edit">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <input type="hidden" asp-for="stream.ID" />
                <div class="form-group">
                    <label asp-for="stream.StreamName" class="control-label"></label>
                    <input asp-for="stream.StreamName" class="form-control" />
                    <span asp-validation-for="stream.StreamName" class="text-danger"></span>
                </div>
                <div class="form-group d-none">
                    <label asp-for="stream.Game" class="control-label"></label>
                    <input asp-for="stream.Game" class="form-control" />
                    <span asp-validation-for="stream.Game" class="text-danger"></span>
                </div>
                <div class="form-group d-none">
                    <label asp-for="stream.UserID" class="control-label"></label>
                    <input asp-for="stream.UserID" class="form-control" />
                    <span asp-validation-for="stream.UserID" class="text-danger"></span>
                </div>
                <div class="form-group d-none">
                    <label asp-for="stream.Url" class="control-label"></label>
                    <input asp-for="stream.Url" class="form-control" />
                    <span asp-validation-for="stream.Url" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="stream.Type" class="control-label"></label>
                    <select asp-for="stream.Type" class="form-control">
                        @foreach (var streamtype in Model.StreamTypes)
                        {
                            <option>@streamtype</option>
                        }
                    </select>
                    <span asp-validation-for="stream.Type" class="text-danger"></span>
                </div>
                <div class="form-group d-none">
                    <label asp-for="stream.Started" class="control-label"></label>
                    <input asp-for="stream.Started" class="form-control" />
                    <span asp-validation-for="stream.Started" class="text-danger"></span>
                </div>
                <div class="form-group d-none">
                    <label asp-for="stream.Stopped" class="control-label"></label>
                    <input asp-for="stream.Stopped" class="form-control" />
                    <span asp-validation-for="stream.Stopped" class="text-danger"></span>
                </div>
                <div class="form-group d-none">
                    <label asp-for="stream.StreamState" class="control-label"></label>
                    <select asp-for="stream.StreamState" class="form-control"></select>
                    <span asp-validation-for="stream.StreamState" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="stream.DiscordRelayChannel" class="control-label"></label>
                    <select asp-for="stream.DiscordRelayChannel" class="form-control">
                        @if (Model.SelectedRelayChannel != null && "Aus" == Model.SelectedRelayChannel)
                        {
                            <option selected="selected">Aus</option>
                        }
                        else
                        {
                            <option>Aus</option>
                        }
                        @if (Model.SelectedRelayChannel != null && "An" == Model.SelectedRelayChannel)
                        {
                            <option selected="selected">An</option>
                        }
                        else
                        {
                            <option>An</option>
                        }
                        @foreach (var relaychannel in Model.RelayChannels)
                        {

                            @if (Model.SelectedRelayChannel != null && relaychannel.Name == Model.SelectedRelayChannel)
                            {
                                <option selected="selected">@relaychannel.Name</option>
                            }
                            else
                            {
                                <option>@relaychannel.Name</option>
                            }
                        }
                    </select>
                    <span asp-validation-for="stream.DiscordRelayChannel" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="stream.UpTimeInterval" class="control-label"></label>
                    <input asp-for="stream.UpTimeInterval" class="form-control" />
                    <span asp-validation-for="stream.UpTimeInterval" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            </form>
        </div>
    </div>

    <div>
        <a class="btn" asp-action="Index">Back to List</a>
    </div>
</div>